//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CTF.Application.Common.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CTF.Application.Common.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Points must be between 1 to 100.
        /// </summary>
        internal static string AddPoints {
            get {
                return ResourceManager.GetString("AddPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully registered. Password: {Password}.
        /// </summary>
        internal static string CreatePlayerAccount {
            get {
                return ResourceManager.GetString("CreatePlayerAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have no items in your weapon package.
        /// </summary>
        internal static string EmptyWeaponPackage {
            get {
                return ResourceManager.GetString("EmptyWeaponPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interval must be between 0 to {Max}.
        /// </summary>
        internal static string InvalidInterval {
            get {
                return ResourceManager.GetString("InvalidInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid map id has been passed.
        /// </summary>
        internal static string InvalidMap {
            get {
                return ResourceManager.GetString("InvalidMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be 3-20 characters long and only contain valid characters (0-9, a-z, A-Z, [], (), $, @ . _ and = only).
        /// </summary>
        internal static string InvalidNickName {
            get {
                return ResourceManager.GetString("InvalidNickName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid rank has been passed.
        /// </summary>
        internal static string InvalidRank {
            get {
                return ResourceManager.GetString("InvalidRank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role ID must be between 0 and 3.
        /// </summary>
        internal static string InvalidRole {
            get {
                return ResourceManager.GetString("InvalidRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skin ID must be between 0 and 311.
        /// </summary>
        internal static string InvalidSkin {
            get {
                return ResourceManager.GetString("InvalidSkin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid team has been passed. Should be Alpha = 0, Beta = 1 or NoTeam = 255.
        /// </summary>
        internal static string InvalidTeam {
            get {
                return ResourceManager.GetString("InvalidTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid weapon has been passed.
        /// </summary>
        internal static string InvalidWeapon {
            get {
                return ResourceManager.GetString("InvalidWeapon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The spawn location list cannot be empty.
        /// </summary>
        internal static string LocationListCannotBeEmpty {
            get {
                return ResourceManager.GetString("LocationListCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please log in or register to continue.
        /// </summary>
        internal static string LoginOrRegisterToContinue {
            get {
                return ResourceManager.GetString("LoginOrRegisterToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map has not been found.
        /// </summary>
        internal static string MapNotFound {
            get {
                return ResourceManager.GetString("MapNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player &apos;{Name}&apos; is a member that already exists.
        /// </summary>
        internal static string MemberAlreadyExists {
            get {
                return ResourceManager.GetString("MemberAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be empty.
        /// </summary>
        internal static string NameCannotBeEmpty {
            get {
                return ResourceManager.GetString("NameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {OldName} changed their name to {NewName}.
        /// </summary>
        internal static string NameSuccessfullyChanged {
            get {
                return ResourceManager.GetString("NameSuccessfullyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You moved up to {Name} rank, congratulations!.
        /// </summary>
        internal static string NextRank {
            get {
                return ResourceManager.GetString("NextRank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password cannot be empty.
        /// </summary>
        internal static string PasswordCannotBeEmpty {
            get {
                return ResourceManager.GetString("PasswordCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password must be between 5 and 20 characters.
        /// </summary>
        internal static string PasswordLength {
            get {
                return ResourceManager.GetString("PasswordLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password successfully changed. New password: {NewPassword}.
        /// </summary>
        internal static string PasswordSuccessfullyChanged {
            get {
                return ResourceManager.GetString("PasswordSuccessfullyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That player name already exists.
        /// </summary>
        internal static string PlayerNameAlreadyExists {
            get {
                return ResourceManager.GetString("PlayerNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name must be between 3 and 20 characters.
        /// </summary>
        internal static string PlayerNameLength {
            get {
                return ResourceManager.GetString("PlayerNameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player &apos;{Name}&apos; is not found.
        /// </summary>
        internal static string PlayerNotFound {
            get {
                return ResourceManager.GetString("PlayerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have gained +100 points, +100 armour, and +100 health.
        /// </summary>
        internal static string RankUpAward {
            get {
                return ResourceManager.GetString("RankUpAward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A spawn location can only be obtained for the alpha or beta team.
        /// </summary>
        internal static string SpawnLocationFailure {
            get {
                return ResourceManager.GetString("SpawnLocationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Points must be between -1 to -100.
        /// </summary>
        internal static string SubtractPoints {
            get {
                return ResourceManager.GetString("SubtractPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully logged in.
        /// </summary>
        internal static string SuccessfulLogin {
            get {
                return ResourceManager.GetString("SuccessfulLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value cannot be negative.
        /// </summary>
        internal static string ValueCannotBeNegative {
            get {
                return ResourceManager.GetString("ValueCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Name} is already in the weapon package.
        /// </summary>
        internal static string WeaponAlreadyExists {
            get {
                return ResourceManager.GetString("WeaponAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weapon has not been found.
        /// </summary>
        internal static string WeaponNotFound {
            get {
                return ResourceManager.GetString("WeaponNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Name} was added to your weapon package.
        /// </summary>
        internal static string WeaponSuccessfullyAdded {
            get {
                return ResourceManager.GetString("WeaponSuccessfullyAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Name} has been removed from your weapon package.
        /// </summary>
        internal static string WeaponSuccessfullyRemoved {
            get {
                return ResourceManager.GetString("WeaponSuccessfullyRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password you entered is incorrect. Please try again.
        /// </summary>
        internal static string WrongPassword {
            get {
                return ResourceManager.GetString("WrongPassword", resourceCulture);
            }
        }
    }
}
