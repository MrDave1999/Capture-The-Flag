//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CTF.Application.Common.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CTF.Application.Common.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has added {Armour}%% to the armour of all players!.
        /// </summary>
        internal static string AddArmourToAllPlayers {
            get {
                return ResourceManager.GetString("AddArmourToAllPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have added {Armour}%% armour to {PlayerName}!.
        /// </summary>
        internal static string AddArmourToPlayer {
            get {
                return ResourceManager.GetString("AddArmourToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has generously given {Coins} coins to all the players!.
        /// </summary>
        internal static string AddCoinsToAllPlayers {
            get {
                return ResourceManager.GetString("AddCoinsToAllPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have given {Coins} coins to {PlayerName}.
        /// </summary>
        internal static string AddCoinsToPlayer {
            get {
                return ResourceManager.GetString("AddCoinsToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has added {Health}%% to the health of all players!.
        /// </summary>
        internal static string AddHealthToAllPlayers {
            get {
                return ResourceManager.GetString("AddHealthToAllPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have added {Health}%% health to {PlayerName}!.
        /// </summary>
        internal static string AddHealthToPlayer {
            get {
                return ResourceManager.GetString("AddHealthToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has added {Score} to the score of all players!.
        /// </summary>
        internal static string AddScoreToAllPlayers {
            get {
                return ResourceManager.GetString("AddScoreToAllPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have added {Score} score to {PlayerName}!.
        /// </summary>
        internal static string AddScoreToPlayer {
            get {
                return ResourceManager.GetString("AddScoreToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This round was won by the Alpha team.
        /// </summary>
        internal static string AlphaIsWinner {
            get {
                return ResourceManager.GetString("AlphaIsWinner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have been assigned to Alpha team.
        /// </summary>
        internal static string AssignedToAlphaTeam {
            get {
                return ResourceManager.GetString("AssignedToAlphaTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have been assigned to Beta team.
        /// </summary>
        internal static string AssignedToBetaTeam {
            get {
                return ResourceManager.GetString("AssignedToBetaTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ban reason must be {Length} characters or less.
        /// </summary>
        internal static string BanReason {
            get {
                return ResourceManager.GetString("BanReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This round was won by the Beta team.
        /// </summary>
        internal static string BetaIsWinner {
            get {
                return ResourceManager.GetString("BetaIsWinner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ~n~~n~~n~~b~The blue flag is not at its base position.
        /// </summary>
        internal static string BlueFlagIsNotAtBasePosition {
            get {
                return ResourceManager.GetString("BlueFlagIsNotAtBasePosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chat is currently disabled while you select your class. Please finish your selection before chatting!.
        /// </summary>
        internal static string ChatDisabled {
            get {
                return ResourceManager.GetString("ChatDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use /combos or NUM 4 key.
        /// </summary>
        internal static string ComboUsage {
            get {
                return ResourceManager.GetString("ComboUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot execute commands in the class selection.
        /// </summary>
        internal static string CommandLockClassSelection {
            get {
                return ResourceManager.GetString("CommandLockClassSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot execute commands while the map is loading.
        /// </summary>
        internal static string CommandLockMapLoading {
            get {
                return ResourceManager.GetString("CommandLockMapLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command not found. To see all available commands, use /cmds.
        /// </summary>
        internal static string CommandNotFound {
            get {
                return ResourceManager.GetString("CommandNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has had {Kills} consecutive kills without dying.
        /// </summary>
        internal static string ConsecutiveKills {
            get {
                return ResourceManager.GetString("ConsecutiveKills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully registered. Password: {Password}.
        /// </summary>
        internal static string CreatePlayerAccount {
            get {
                return ResourceManager.GetString("CreatePlayerAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demoted to {RoleName} role.
        /// </summary>
        internal static string DemotedToRole {
            get {
                return ResourceManager.GetString("DemotedToRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has disabled the Rocket Launcher(RPG).
        /// </summary>
        internal static string DisableRocketLauncher {
            get {
                return ResourceManager.GetString("DisableRocketLauncher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have no items in your weapon package.
        /// </summary>
        internal static string EmptyWeaponPackage {
            get {
                return ResourceManager.GetString("EmptyWeaponPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has enabled the Rocket Launcher(RPG). Use /combos or NUM 4 key.
        /// </summary>
        internal static string EnableRocketLauncher {
            get {
                return ResourceManager.GetString("EnableRocketLauncher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To exit spectator mode use the command /class.
        /// </summary>
        internal static string ExitSpectatorMode {
            get {
                return ResourceManager.GetString("ExitSpectatorMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {ColorName} flag has automatically returned to its base position after {Seconds} seconds!.
        /// </summary>
        internal static string FlagAutoReturn {
            get {
                return ResourceManager.GetString("FlagAutoReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {ColorName} flag has returned to its base position after {PlayerName} was paused for {Seconds} seconds!.
        /// </summary>
        internal static string FlagAutoReturn2 {
            get {
                return ResourceManager.GetString("FlagAutoReturn2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ~r~Welcome to Capture The Flag mode~n~~y~It is a game mode in which two teams (Alpha and Beta) compete to capture the other team&apos;s flag and bring it back to their own base to score a point.
        /// </summary>
        internal static string GameModeDescription {
            get {
                return ResourceManager.GetString("GameModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has given all players a jetpack.
        /// </summary>
        internal static string GiveJetpackToPlayers {
            get {
                return ResourceManager.GetString("GiveJetpackToPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have obtained 100 coins!.
        /// </summary>
        internal static string GiveMeCoins {
            get {
                return ResourceManager.GetString("GiveMeCoins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use this command because you are the flag carrier.
        /// </summary>
        internal static string HasCapturedFlag {
            get {
                return ResourceManager.GetString("HasCapturedFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName1} landed a headshot with a sniper at {PlayerName2}.
        /// </summary>
        internal static string HeadshotToPlayer {
            get {
                return ResourceManager.GetString("HeadshotToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} decided that the flag carriers will be hidden on the radar map.
        /// </summary>
        internal static string HideFlagCarriersOnRadarMap {
            get {
                return ResourceManager.GetString("HideFlagCarriersOnRadarMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have enough coins to obtain this combo.
        /// </summary>
        internal static string InsufficientCoins {
            get {
                return ResourceManager.GetString("InsufficientCoins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coins must be between 1 to 100.
        /// </summary>
        internal static string InvalidAddCoins {
            get {
                return ResourceManager.GetString("InvalidAddCoins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid color. Only &apos;red&apos; and &apos;blue&apos; are valid options for this command.
        /// </summary>
        internal static string InvalidFlagColor {
            get {
                return ResourceManager.GetString("InvalidFlagColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interval must be between 0 to {Max}.
        /// </summary>
        internal static string InvalidInterval {
            get {
                return ResourceManager.GetString("InvalidInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid map id has been passed.
        /// </summary>
        internal static string InvalidMap {
            get {
                return ResourceManager.GetString("InvalidMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of players must be between 5 to 15.
        /// </summary>
        internal static string InvalidMaxTopPlayers {
            get {
                return ResourceManager.GetString("InvalidMaxTopPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be 3-20 characters long and only contain valid characters (0-9, a-z, A-Z, [], (), $, @ . _ and = only).
        /// </summary>
        internal static string InvalidNickName {
            get {
                return ResourceManager.GetString("InvalidNickName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid rank has been passed.
        /// </summary>
        internal static string InvalidRank {
            get {
                return ResourceManager.GetString("InvalidRank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role ID must be between 0 and 3.
        /// </summary>
        internal static string InvalidRole {
            get {
                return ResourceManager.GetString("InvalidRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skin ID must be between 0 and 311.
        /// </summary>
        internal static string InvalidSkin {
            get {
                return ResourceManager.GetString("InvalidSkin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coins must be between -1 to -100.
        /// </summary>
        internal static string InvalidSubtractCoins {
            get {
                return ResourceManager.GetString("InvalidSubtractCoins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid team has been passed. Should be Alpha = 0, Beta = 1 or NoTeam = 255.
        /// </summary>
        internal static string InvalidTeam {
            get {
                return ResourceManager.GetString("InvalidTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vitality must be between 0 to 100.
        /// </summary>
        internal static string InvalidVitality {
            get {
                return ResourceManager.GetString("InvalidVitality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid weapon has been passed.
        /// </summary>
        internal static string InvalidWeapon {
            get {
                return ResourceManager.GetString("InvalidWeapon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The spawn location list cannot be empty.
        /// </summary>
        internal static string LocationListCannotBeEmpty {
            get {
                return ResourceManager.GetString("LocationListCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please log in or register to continue.
        /// </summary>
        internal static string LoginOrRegisterToContinue {
            get {
                return ResourceManager.GetString("LoginOrRegisterToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} forced the map change to {MapName}.
        /// </summary>
        internal static string MapChangeForced {
            get {
                return ResourceManager.GetString("MapChangeForced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while the map is being loaded.
        /// </summary>
        internal static string MapIsLoading {
            get {
                return ResourceManager.GetString("MapIsLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map has not been found.
        /// </summary>
        internal static string MapNotFound {
            get {
                return ResourceManager.GetString("MapNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Name} has been successfully loaded.
        /// </summary>
        internal static string MapSuccessfullyLoaded {
            get {
                return ResourceManager.GetString("MapSuccessfullyLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player &apos;{Name}&apos; is a member that already exists.
        /// </summary>
        internal static string MemberAlreadyExists {
            get {
                return ResourceManager.GetString("MemberAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be empty.
        /// </summary>
        internal static string NameCannotBeEmpty {
            get {
                return ResourceManager.GetString("NameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {OldName} changed their name to {NewName}.
        /// </summary>
        internal static string NameSuccessfullyChanged {
            get {
                return ResourceManager.GetString("NameSuccessfullyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} decided that the next map will be in {MapName}.
        /// </summary>
        internal static string NextMapSelection {
            get {
                return ResourceManager.GetString("NextMapSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The next map will be loaded soon: {Name}.
        /// </summary>
        internal static string NextMapWillBeLoadedSoon {
            get {
                return ResourceManager.GetString("NextMapWillBeLoadedSoon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You moved up to {Name} rank, congratulations!.
        /// </summary>
        internal static string NextRank {
            get {
                return ResourceManager.GetString("NextRank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are currently no administrators connected to the server.
        /// </summary>
        internal static string NoAdminsConnected {
            get {
                return ResourceManager.GetString("NoAdminsConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No match found.
        /// </summary>
        internal static string NoMatchFound {
            get {
                return ResourceManager.GetString("NoMatchFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have permissions to use this command.
        /// </summary>
        internal static string NoPermissions {
            get {
                return ResourceManager.GetString("NoPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not belong to any team.
        /// </summary>
        internal static string NoTeam {
            get {
                return ResourceManager.GetString("NoTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no VIP players connected at the moment.
        /// </summary>
        internal static string NoVIPsConnected {
            get {
                return ResourceManager.GetString("NoVIPsConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You already have that skin.
        /// </summary>
        internal static string OldSkinIsEqualsToNewSkin {
            get {
                return ResourceManager.GetString("OldSkinIsEqualsToNewSkin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ~n~~n~~n~{GameText}Defend this flag from enemy capture!.
        /// </summary>
        internal static string OnFlagAtBasePosition {
            get {
                return ResourceManager.GetString("OnFlagAtBasePosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has captured the {TeamName} team&apos;s {ColorName} flag! Keep an eye on the score!.
        /// </summary>
        internal static string OnFlagCaptured {
            get {
                return ResourceManager.GetString("OnFlagCaptured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has dropped the {TeamName} team&apos;s {ColorName} flag! Retrieve it before the enemy does!.
        /// </summary>
        internal static string OnFlagDropped {
            get {
                return ResourceManager.GetString("OnFlagDropped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has returned the {TeamName} team&apos;s {ColorName} flag to its base! Keep up the defense!.
        /// </summary>
        internal static string OnFlagReturned {
            get {
                return ResourceManager.GetString("OnFlagReturned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has brought the {ColorName} flag to the {TeamName} team&apos;s base. Point scored!.
        /// </summary>
        internal static string OnFlagScore {
            get {
                return ResourceManager.GetString("OnFlagScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has taken the {TeamName} team&apos;s {ColorName} flag! Keep an eye on the score!.
        /// </summary>
        internal static string OnFlagTaken {
            get {
                return ResourceManager.GetString("OnFlagTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner&apos;s name or secret key are not set.
        /// </summary>
        internal static string OwnerNameOrSecretKeyAreNotSet {
            get {
                return ResourceManager.GetString("OwnerNameOrSecretKeyAreNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password cannot be empty.
        /// </summary>
        internal static string PasswordCannotBeEmpty {
            get {
                return ResourceManager.GetString("PasswordCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password must be between 5 and 20 characters.
        /// </summary>
        internal static string PasswordLength {
            get {
                return ResourceManager.GetString("PasswordLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password successfully changed. New password: {NewPassword}.
        /// </summary>
        internal static string PasswordSuccessfullyChanged {
            get {
                return ResourceManager.GetString("PasswordSuccessfullyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has been added to the {TeamName} team.
        /// </summary>
        internal static string PlayerAddedToTeam {
            get {
                return ResourceManager.GetString("PlayerAddedToTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The player already has that role.
        /// </summary>
        internal static string PlayerAlreadyHasThatRole {
            get {
                return ResourceManager.GetString("PlayerAlreadyHasThatRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attention, team! {PlayerName} has made the switch and is now part of the {TeamName} team.
        /// </summary>
        internal static string PlayerHasChangedTeams {
            get {
                return ResourceManager.GetString("PlayerHasChangedTeams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The player is in spectator mode.
        /// </summary>
        internal static string PlayerInSpectatorMode {
            get {
                return ResourceManager.GetString("PlayerInSpectatorMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are already a member of that team.
        /// </summary>
        internal static string PlayerIsAlreadyInTeam {
            get {
                return ResourceManager.GetString("PlayerIsAlreadyInTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use this command for yourself.
        /// </summary>
        internal static string PlayerIsEqualsToTargetPlayer {
            get {
                return ResourceManager.GetString("PlayerIsEqualsToTargetPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The player is in the class selection.
        /// </summary>
        internal static string PlayerIsInClassSelection {
            get {
                return ResourceManager.GetString("PlayerIsInClassSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are not the owner of this server.
        /// </summary>
        internal static string PlayerIsNotServerOwner {
            get {
                return ResourceManager.GetString("PlayerIsNotServerOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That player name already exists.
        /// </summary>
        internal static string PlayerNameAlreadyExists {
            get {
                return ResourceManager.GetString("PlayerNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name must be between 3 and 20 characters.
        /// </summary>
        internal static string PlayerNameLength {
            get {
                return ResourceManager.GetString("PlayerNameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player &apos;{Name}&apos; is not found.
        /// </summary>
        internal static string PlayerNotFound {
            get {
                return ResourceManager.GetString("PlayerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have enough health.
        /// </summary>
        internal static string PlayerWithInsufficientHealth {
            get {
                return ResourceManager.GetString("PlayerWithInsufficientHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That player has private messages blocked.
        /// </summary>
        internal static string PrivateMessagesBlocked {
            get {
                return ResourceManager.GetString("PrivateMessagesBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now players cannot send you a private message.
        /// </summary>
        internal static string PrivateMessagesDisabled {
            get {
                return ResourceManager.GetString("PrivateMessagesDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now players can send you a private message.
        /// </summary>
        internal static string PrivateMessagesEnabled {
            get {
                return ResourceManager.GetString("PrivateMessagesEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promoted to {RoleName} role.
        /// </summary>
        internal static string PromotedToRole {
            get {
                return ResourceManager.GetString("PromotedToRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have gained +100 coins, +100 armour, and +100 health.
        /// </summary>
        internal static string RankUpAward {
            get {
                return ResourceManager.GetString("RankUpAward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations! You&apos;ve received {Armour}%% armour from {PlayerName}!.
        /// </summary>
        internal static string ReceiveArmourFromPlayer {
            get {
                return ResourceManager.GetString("ReceiveArmourFromPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations! You&apos;ve received {Coins} coins from {PlayerName}!.
        /// </summary>
        internal static string ReceiveCoinsFromPlayer {
            get {
                return ResourceManager.GetString("ReceiveCoinsFromPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations! You&apos;ve received {Health}%% health from {PlayerName}!.
        /// </summary>
        internal static string ReceiveHealthFromPlayer {
            get {
                return ResourceManager.GetString("ReceiveHealthFromPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations! You&apos;ve received {Kills} kills from {PlayerName}!.
        /// </summary>
        internal static string ReceiveKillsFromPlayer {
            get {
                return ResourceManager.GetString("ReceiveKillsFromPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations! You&apos;ve received {Score} score from {PlayerName}!.
        /// </summary>
        internal static string ReceiveScoreFromPlayer {
            get {
                return ResourceManager.GetString("ReceiveScoreFromPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} redeemed their coins for the combo: {ComboName}.
        /// </summary>
        internal static string RedeemedCoins {
            get {
                return ResourceManager.GetString("RedeemedCoins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ~n~~n~~n~~r~The red flag is not at its base position.
        /// </summary>
        internal static string RedFlagIsNotAtBasePosition {
            get {
                return ResourceManager.GetString("RedFlagIsNotAtBasePosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully sent the report.
        /// </summary>
        internal static string ReportSuccessfullySent {
            get {
                return ResourceManager.GetString("ReportSuccessfullySent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {CurrentPlayer} reported to {TargetPlayer} [Reason: {Reason}].
        /// </summary>
        internal static string ReportToAnotherPlayer {
            get {
                return ResourceManager.GetString("ReportToAnotherPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has reset the {ColorName} flag to its base position.
        /// </summary>
        internal static string ResetFlagPosition {
            get {
                return ResourceManager.GetString("ResetFlagPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has reset their stats, such as score, kills and deaths.
        /// </summary>
        internal static string ResetPlayerStats {
            get {
                return ResourceManager.GetString("ResetPlayerStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} has reset the statistics of both teams (Alpha and Beta).
        /// </summary>
        internal static string ResetTeamStats {
            get {
                return ResourceManager.GetString("ResetTeamStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The rocket launcher is disabled. It must be enabled by the STAFF.
        /// </summary>
        internal static string RocketLauncherDisabled {
            get {
                return ResourceManager.GetString("RocketLauncherDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have assigned the {RoleName} role to {PlayerName}.
        /// </summary>
        internal static string RoleSuccessfullyChanged {
            get {
                return ResourceManager.GetString("RoleSuccessfullyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The skin ID {SkinId} has been successfully saved.
        /// </summary>
        internal static string SavedSkin {
            get {
                return ResourceManager.GetString("SavedSkin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully set {PlayerName}&apos;s kills to {Kills}!.
        /// </summary>
        internal static string SetKillsToPlayer {
            get {
                return ResourceManager.GetString("SetKillsToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully set {PlayerName}&apos;s score to {Score}!.
        /// </summary>
        internal static string SetScoreToPlayer {
            get {
                return ResourceManager.GetString("SetScoreToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve spawned {PlayerName} into the game!.
        /// </summary>
        internal static string SetSpawnToPlayer {
            get {
                return ResourceManager.GetString("SetSpawnToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PlayerName} decided that the flag carriers will be shown on the radar map.
        /// </summary>
        internal static string ShowFlagCarriersOnRadarMap {
            get {
                return ResourceManager.GetString("ShowFlagCarriersOnRadarMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A spawn location can only be obtained for the alpha or beta team.
        /// </summary>
        internal static string SpawnLocationFailure {
            get {
                return ResourceManager.GetString("SpawnLocationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully logged in.
        /// </summary>
        internal static string SuccessfulLogin {
            get {
                return ResourceManager.GetString("SuccessfulLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attention, players! {CurrentPlayer} has banned {TargetPlayer} [Reason: {Reason}].
        /// </summary>
        internal static string SuccessfullyBanned {
            get {
                return ResourceManager.GetString("SuccessfullyBanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attention, players! {CurrentPlayer} has kicked {TargetPlayer} [Reason: {Reason}].
        /// </summary>
        internal static string SuccessfullyKicked {
            get {
                return ResourceManager.GetString("SuccessfullyKicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully unbanned IP: {Ip}!.
        /// </summary>
        internal static string SuccessfullyUnbanned {
            get {
                return ResourceManager.GetString("SuccessfullyUnbanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The team is currently full.
        /// </summary>
        internal static string TeamIsFull {
            get {
                return ResourceManager.GetString("TeamIsFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both teams have the same number of members.
        /// </summary>
        internal static string TeamsAreEqualInMembers {
            get {
                return ResourceManager.GetString("TeamsAreEqualInMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s a tie! Both teams couldn&apos;t beat each other this time.
        /// </summary>
        internal static string TiedTeams {
            get {
                return ResourceManager.GetString("TiedTeams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must wait {Minutes} minutes to use this command again.
        /// </summary>
        internal static string TimeRequiredToReuseCommand {
            get {
                return ResourceManager.GetString("TimeRequiredToReuseCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The player is not authenticated.
        /// </summary>
        internal static string UnauthenticatedPlayer {
            get {
                return ResourceManager.GetString("UnauthenticatedPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value cannot be negative.
        /// </summary>
        internal static string ValueCannotBeNegative {
            get {
                return ResourceManager.GetString("ValueCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {CurrentPlayer} has given a warning to {TargetPlayer} [{WarningsNumber}/3] [Reason: {Reason}].
        /// </summary>
        internal static string WarningSuccessfullyGiven {
            get {
                return ResourceManager.GetString("WarningSuccessfullyGiven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Name} is already in the weapon package.
        /// </summary>
        internal static string WeaponAlreadyExists {
            get {
                return ResourceManager.GetString("WeaponAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weapon has not been found.
        /// </summary>
        internal static string WeaponNotFound {
            get {
                return ResourceManager.GetString("WeaponNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Name} was added to your weapon package.
        /// </summary>
        internal static string WeaponSuccessfullyAdded {
            get {
                return ResourceManager.GetString("WeaponSuccessfullyAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Name} has been removed from your weapon package.
        /// </summary>
        internal static string WeaponSuccessfullyRemoved {
            get {
                return ResourceManager.GetString("WeaponSuccessfullyRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt;&gt; Welcome to Capture The Flag TDM! We&apos;re excited to have you here!.
        /// </summary>
        internal static string Welcome1 {
            get {
                return ResourceManager.GetString("Welcome1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt;&gt; Use /cmds and /help for more information about our server and to kick off your adventure. Have fun!.
        /// </summary>
        internal static string Welcome2 {
            get {
                return ResourceManager.GetString("Welcome2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt;&gt; Your mission: capture the enemy&apos;s flag and bring it back to your own base. The victory is in your hands!.
        /// </summary>
        internal static string Welcome3 {
            get {
                return ResourceManager.GetString("Welcome3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password you entered is incorrect. Please try again.
        /// </summary>
        internal static string WrongPassword {
            get {
                return ResourceManager.GetString("WrongPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secret key you entered is incorrect. Please try again.
        /// </summary>
        internal static string WrongSecretKey {
            get {
                return ResourceManager.GetString("WrongSecretKey", resourceCulture);
            }
        }
    }
}
